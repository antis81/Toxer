#!/bin/sh -e

SCRIPT_DIR=$(dirname `readlink -f -- $0`)

PROJECT_DIR=$SCRIPT_DIR
TOXER_BUILD_DIR=${TOXER_BUILD_DIR:-"$PROJECT_DIR/build/Toxer-Desktop/Release"}
TOXER_UI_URL=${TOXER_UI_URL:-'https://gitlab.com/antis81/toxer-ui.git'}
TOXER_UI_BRANCH=${TOXER_UI_BRANCH:-'master'}
TOXER_UI_WORKTREE="$PROJECT_DIR/qml"

QT_BASE_DIR=${QT_BASE_DIR:-"$HOME/Qt"}
QT_TOOLCHAIN=${QT_TOOLCHAIN:-'gcc_64'}
QT_VERSION=${QT_VERSION:-'5.9'}
QT_DIR="$QT_BASE_DIR/$QT_VERSION/$QT_TOOLCHAIN"

PATH="$QT_DIR/bin:$PATH"

# this function fetches and updates third party libs
updateLib() {
  WORKTREE="$PROJECT_DIR/lib/$1"
  REMOTE_URL=$2
  BRANCH=$3

  if [ -d "$WORKTREE" ] ; then
    echo "Found worktree directory at $WORKTREE."
    echo "Fetching branch \"$BRANCH\""
    git -C "$WORKTREE" fetch $REMOTE_URL $BRANCH
    echo "Updated repository in $WORKTREE"
  else
    git clone -q --progress --no-checkout --depth=2 --branch="$BRANCH" \
      $REMOTE_URL $WORKTREE
    echo "Cloned Toxer sources to $WORKTREE."
  fi

  git -C "$WORKTREE" checkout -f --detach
}

echo 'Configuring Toxer for buildâ€¦
[Step #1 - Fetch Toxer UI components]
'

if [ -d "$TOXER_UI_WORKTREE" ] ; then
  echo "Toxer core components directory exists. Fetching branch \"$TOXER_UI_BRANCH\""
  git -C "$TOXER_UI_WORKTREE" fetch $TOXER_UI_URL $TOXER_UI_BRANCH
  echo "Updated Toxer core components in $TOXER_UI_WORKTREE"
else
  git clone -q --progress --no-checkout --branch="$TOXER_UI_BRANCH" \
    $TOXER_UI_URL $TOXER_UI_WORKTREE
  git -C "$TOXER_UI_WORKTREE" checkout
  echo "Cloned Toxer sources to $TOXER_UI_WORKTREE."
fi

echo '[Step #2 - Setup CMake build environment]'

mkdir -p "$TOXER_BUILD_DIR"
cd "$TOXER_BUILD_DIR"
cmake "$PROJECT_DIR"
cd -

echo 'Toxer configuration finished! To build Toxer run
  make -j$(nproc) -C build
'

